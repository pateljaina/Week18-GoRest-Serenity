<?xml version="1.0" encoding="UTF-8"?><testsuite errors="4" failures="0" name="com.gorest.gorest.gorestinfo.GoRestCURDTestWithSteps" skipped="0" tests="4" time="0.36" timestamp="2023-06-06T15:51:26.047+01:00[Europe/London]"><testcase classname="com.gorest.gorest.gorestinfo.GoRestCURDTestWithSteps" name="This method will get all users records"><error message="baseURI cannot be null" type="java.lang.IllegalArgumentException">baseURI cannot be null</error><system-err>baseURI cannot be null&#13;
io.restassured.internal.assertion.AssertParameter.notNull(AssertParameter.groovy:26)&#13;
io.restassured.internal.RequestSpecificationImpl.&lt;init&gt;(RequestSpecificationImpl.groovy:132)&#13;
io.restassured.RestAssured.createTestSpecification(RestAssured.java:1492)&#13;
io.restassured.RestAssured.given(RestAssured.java:711)&#13;
net.serenitybdd.rest.SerenityRest.given(SerenityRest.java:211)&#13;
com.gorest.gorestinfo.GoRestSteps.getUserIDs(GoRestSteps.java:30)&#13;
com.gorest.gorest.gorestinfo.GoRestCURDTestWithSteps.test001(GoRestCURDTestWithSteps.java:33)&#13;
</system-err></testcase><testcase classname="com.gorest.gorest.gorestinfo.GoRestCURDTestWithSteps" name="This method will create a new users record and verify it by its ID"><error message="baseURI cannot be null" type="java.lang.IllegalArgumentException">baseURI cannot be null</error><system-err>baseURI cannot be null&#13;
io.restassured.internal.assertion.AssertParameter.notNull(AssertParameter.groovy:26)&#13;
io.restassured.internal.RequestSpecificationImpl.&lt;init&gt;(RequestSpecificationImpl.groovy:132)&#13;
io.restassured.RestAssured.createTestSpecification(RestAssured.java:1492)&#13;
io.restassured.RestAssured.given(RestAssured.java:711)&#13;
net.serenitybdd.rest.SerenityRest.given(SerenityRest.java:211)&#13;
com.gorest.gorestinfo.GoRestSteps.createUserRecord(GoRestSteps.java:18)&#13;
com.gorest.gorest.gorestinfo.GoRestCURDTestWithSteps.test002(GoRestCURDTestWithSteps.java:39)&#13;
</system-err></testcase><testcase classname="com.gorest.gorest.gorestinfo.GoRestCURDTestWithSteps" name="This method will update the existing record"><error message="baseURI cannot be null" type="java.lang.IllegalArgumentException">baseURI cannot be null</error><system-err>baseURI cannot be null&#13;
io.restassured.internal.assertion.AssertParameter.notNull(AssertParameter.groovy:26)&#13;
io.restassured.internal.RequestSpecificationImpl.&lt;init&gt;(RequestSpecificationImpl.groovy:132)&#13;
io.restassured.RestAssured.createTestSpecification(RestAssured.java:1492)&#13;
io.restassured.RestAssured.given(RestAssured.java:711)&#13;
net.serenitybdd.rest.SerenityRest.given(SerenityRest.java:211)&#13;
com.gorest.gorestinfo.GoRestSteps.userRecordUpdate(GoRestSteps.java:45)&#13;
com.gorest.gorest.gorestinfo.GoRestCURDTestWithSteps.test003(GoRestCURDTestWithSteps.java:50)&#13;
</system-err></testcase><testcase classname="com.gorest.gorest.gorestinfo.GoRestCURDTestWithSteps" name="This method will delete the existing record"><error message="baseURI cannot be null" type="java.lang.IllegalArgumentException">baseURI cannot be null</error><system-err>baseURI cannot be null&#13;
io.restassured.internal.assertion.AssertParameter.notNull(AssertParameter.groovy:26)&#13;
io.restassured.internal.RequestSpecificationImpl.&lt;init&gt;(RequestSpecificationImpl.groovy:132)&#13;
io.restassured.RestAssured.createTestSpecification(RestAssured.java:1492)&#13;
io.restassured.RestAssured.given(RestAssured.java:711)&#13;
net.serenitybdd.rest.SerenityRest.given(SerenityRest.java:211)&#13;
com.gorest.gorestinfo.GoRestSteps.deleteUserRecord(GoRestSteps.java:69)&#13;
com.gorest.gorest.gorestinfo.GoRestCURDTestWithSteps.test004(GoRestCURDTestWithSteps.java:59)&#13;
</system-err></testcase></testsuite>